@startuml

title __REPO's Class Diagram__\n

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.ClimateParameterRepoImpl {
        - cpdClass : Class<ClimateParameterDO>
        - repoImpl : RepoImpl<ClimateParameterDO>
        - template : JpaTemplate
        - typeRepo : RepoImpl<SensorTypeDO>
        - unitRepo : RepoImpl<UnitDO>
        + ClimateParameterRepoImpl()
        + addUnits()
        + create()
        + delete()
        + get()
        + getAll()
        + getAll()
        + getByName()
        + update()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.LocationRepoImpl {
        - template : JpaTemplate
        + LocationRepoImpl()
        + create()
        + delete()
        + get()
        + getAll()
        + getByName()
        + update()
        - getById()
        - getByIdOrName()
        - getByName()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.RepoImpl {
        - template : JpaTemplate
        + RepoImpl()
        + getAll()
        + getAll()
        + getById()
        + getByIdOrName()
        + getByName()
        + getEntityById()
        + getEntitySet()
        + getEntitySet()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.SensorRepoImpl {
        - sensorRepo : RepoImpl<SensorDO>
        - stdClass : Class<SensorDO>
        - template : JpaTemplate
        + SensorRepoImpl()
        + addUsers()
        + create()
        + delete()
        + get()
        + getAll()
        + getAll()
        + setLocation()
        + setSensorType()
        + update()
        - getUsersById()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.SensorTypeRepoImpl {
        - paramRepo : RepoImpl<ClimateParameterDO>
        - stdClass : Class<SensorTypeDO>
        - template : JpaTemplate
        - typeRepo : RepoImpl<SensorTypeDO>
        + SensorTypeRepoImpl()
        + addParams()
        + create()
        + delete()
        + get()
        + getAll()
        + update()
        - getParamsById()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.UniqueValidationRepoImpl {
        - template : JpaTemplate
        + UniqueValidationRepoImpl()
        + presentObject()
        - getByUniqueFiled()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.UnitRepoIml {
        - template : JpaTemplate
        + UnitRepoIml()
        + create()
        + delete()
        + get()
        + getAll()
        + getByName()
        + update()
        - getById()
        - getByIdOrName()
        - getByName()
    }
  }
  

  namespace ru.training.karaf.repo {
    class ru.training.karaf.repo.UserRepoImpl {
        - repo : RepoImpl<SensorDO>
        - stdClass : Class<SensorDO>
        - template : JpaTemplate
        + UserRepoImpl()
        + addSensors()
        + create()
        + delete()
        + get()
        + getAll()
        + getAll()
        + loginIsPresent()
        + update()
        - getByLogin()
        - getSensors()
    }
  }
  

  ru.training.karaf.repo.ClimateParameterRepoImpl .up.|> ru.training.karaf.repo.ClimateParameterRepo
  ru.training.karaf.repo.LocationRepoImpl .up.|> ru.training.karaf.repo.LocationRepo
  ru.training.karaf.repo.SensorRepoImpl .up.|> ru.training.karaf.repo.SensorRepo
  ru.training.karaf.repo.SensorTypeRepoImpl .up.|> ru.training.karaf.repo.SensorTypeRepo
  ru.training.karaf.repo.UniqueValidationRepoImpl .up.|> ru.training.karaf.repo.UniqueValidationRepo
  ru.training.karaf.repo.UnitRepoIml .up.|> ru.training.karaf.repo.UnitRepo
  ru.training.karaf.repo.UserRepoImpl .up.|> ru.training.karaf.repo.UserRepo


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
